include $(SRCBASE)/router/common.mak
include $(SRCBASE)/.config

export CFLAGS+=$(EXTRACFLAGS)
export LDFLAGS+=$(EXTRALDFLAGS)

STAGING_DIR:=$(STAGEDIR)
TOOLCHAIN_DIR:=$(TOOLS)
TARGET_CFLAGS:=$(CFLAGS) -I$(STAGING_DIR)/usr/include/
TARGET_CXXFLAGS:=$(TARGET_CFLAGS)
TARGET_ASFLAGS_DEFAULT:=$(TARGET_CFLAGS)
TARGET_ASFLAGS:=$(TARGET_ASFLAGS_DEFAULT)
TARGET_CPPFLAGS:=-I$(STAGING_DIR)/usr/include -I$(STAGING_DIR)/include
TARGET_LDFLAGS:=$(LDFLAGS) -L$(STAGING_DIR)/usr/lib -L$(STAGING_DIR)/lib
TARGET_CFLAGS+= -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result
TARGET_CPPFLAGS+= -I$(TOOLCHAIN_DIR)/usr/include -I$(TOOLCHAIN_DIR)/include/fortify
TARGET_CPPFLAGS+= -I$(TOOLCHAIN_DIR)/include
TARGET_LDFLAGS+= -L$(TOOLCHAIN_DIR)/usr/lib -L$(TOOLCHAIN_DIR)/lib
TARGET_CROSS:=$(CROSS_COMPILE)
TARGET_CC:=$(CROSS_COMPILE)gcc
TARGET_CXX:=$(CROSS_COMPILE)g++
TARGET_LD:=$(TARGET_CROSS)ld
TARGET_AR:=$(TARGET_CROSS)gcc-ar
TARGET_RANLIB:=$(TARGET_CROSS)gcc-ranlib
TARGET_NM:=$(TARGET_CROSS)gcc-nm
LINUX_VERSION=$(LINUX_KERNEL)
CP:=cp -fpR

TARGET_CONFIGURE_OPTS = \
  AR="$(TARGET_AR)" \
  AS="$(TARGET_CC) -c $(TARGET_ASFLAGS)" \
  LD="$(TARGET_LD)" \
  NM="$(TARGET_NM)" \
  CC="$(TARGET_CC)" \
  GCC="$(TARGET_CC)" \
  CXX="$(TARGET_CXX)" \
  RANLIB="$(TARGET_RANLIB)" \
  STRIP=$(TARGET_CROSS)strip \
  OBJCOPY=$(TARGET_CROSS)objcopy \
  OBJDUMP=$(TARGET_CROSS)objdump \

MAKE_VARS = \
	CFLAGS="$(TARGET_CFLAGS) $(EXTRA_CFLAGS) $(TARGET_CPPFLAGS) $(EXTRA_CPPFLAGS)" \
	CXXFLAGS="$(TARGET_CXXFLAGS) $(EXTRA_CXXFLAGS) $(TARGET_CPPFLAGS) $(EXTRA_CPPFLAGS)" \
	LDFLAGS="$(TARGET_LDFLAGS) $(EXTRA_LDFLAGS)"

KERNEL_MAKE_FLAGS = \
	HOSTCFLAGS="-O2 -Wall -Wmissing-prototypes -Wstrict-prototypes" \
	CROSS_COMPILE="$(CROSS_COMPILE)" \
	ARCH="$(ARCH)"
#aarch64(KARCH)->arm64(ARCH)

KERNEL_MAKEOPTS:= -C $(LINUXDIR) $(KERNEL_MAKE_FLAGS)
TARGET_MAKE=$(MAKE_VARS) $(MAKE)
KERNEL_MAKE=$(MAKE_VARS) $(MAKE) $(KERNEL_MAKEOPTS) $(TARGET_CONFIGURE_OPTS)
